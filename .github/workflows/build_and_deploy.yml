name: Build & Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - 'dev'
          - 'production'
          - 'eu-production'

jobs:
  build_and_deploy:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set ENV variables
        run: |
          if [[ "${{ inputs.environment }}" == "dev" ]]; then
            echo "AWS_ACCOUNT_ID=484938649000" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=blockcerts-dev" >> $GITHUB_ENV
          elif [[ "${{ inputs.environment }}" == "production" ]]; then
            echo "AWS_ACCOUNT_ID=693634420699" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=blockcerts-prod" >> $GITHUB_ENV
          elif [[ "${{ inputs.environment }}" == "eu-production" ]]; then
            echo "AWS_ACCOUNT_ID=693634420699" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=blockcerts-prod-eu" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::866073375833:role/SharedServices-GitHubActions-OIDC-Role
          aws-region: us-east-1
          role-session-name: api_deploy_session
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
        with:
          registries: $AWS_ACCOUNT_ID

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg ENV_NAME=${{ inputs.environment }} -f Dockerfile.accredible .

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "IMAGE $IMAGE_TAG is pushed to $ECR_REGISTRY/$ECR_REPOSITORY"
